/**
--------------------------------------------------------
--------------------------------------------------------
 * @name    : NVIC_priv.h
 * @author  : Ziad Mohammed Fathy.
 * @date    : Sep.29.2024
 * @version :   _v1_
 * @brief   :
--------------------------------------------------------
--------------------------------------------------------
 */

#ifndef _MCAL_CORE_CORTEXM3_NVIC_PRIV_H_
#define _MCAL_CORE_CORTEXM3_NVIC_PRIV_H_

/* -------------------- Include Start -------------------- */
#include "../../04_lib/bit_math.h"
#include "../../04_lib/std_types.h"
#include "../STM32F103/Common/Common_dfs.h"
/* -------------------- Include END -------------------- */

/* -------------------- Macro Start -------------------- */


#define NVIC_IPR_BASE_ADDRESS				0xE000E400
#define NVIC								((NVIC_IPR_t *)NVIC_IPR_BASE_ADDRESS)

#define NVIC_STIR							(*((volatile uint32_t*)(0xE000EF00)))


	/* @groupMacro	: Interrupt Set-enable Registers */
#define NVIC_ISER_BASE_ADDRESS					0xE000E100

#define NVIC_ISER0							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X00)))
#define NVIC_ISER1							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X04)))
#define NVIC_ISER2							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X08)))
#define NVIC_ISER3							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X0C)))
#define NVIC_ISER4							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X10)))
#define NVIC_ISER5							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X14)))
#define NVIC_ISER6							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X18)))
#define NVIC_ISER7							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X1C)))

	/* @groupMacro	: Interrupt Clear-enable Registers */
#define NVIC_ICER_BASE_ADDRESS					0XE000E180

#define NVIC_ICER0							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X00)))
#define NVIC_ICER1							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X04)))
#define NVIC_ICER2							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X08)))
#define NVIC_ICER3							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X0C)))
#define NVIC_ICER4							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X10)))
#define NVIC_ICER5							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X14)))
#define NVIC_ICER6							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X18)))
#define NVIC_ICER7							(*((volatile uint32_t*)(NVIC_ISER_BASE_ADDRESS + 0X1C)))


	/* @groupMacro	: Interrupt Set-pending Registers */
#define NVIC_ISPR_BASE_ADDRESS					0XE000E200

#define NVIC_ISPR0							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X00)))
#define NVIC_ISPR1							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X04)))
#define NVIC_ISPR2							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X08)))
#define NVIC_ISPR3							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X0C)))
#define NVIC_ISPR4							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X10)))
#define NVIC_ISPR5							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X14)))
#define NVIC_ISPR6							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X18)))
#define NVIC_ISPR7							(*((volatile uint32_t*)(NVIC_ISPR_BASE_ADDRESS + 0X1C)))

	/* @groupMacro	: Interrupt Clear-pending Registers */
#define NVIC_ICPR_BASE_ADDRESS					0XE000E280

#define NVIC_ICPR0							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X00)))
#define NVIC_ICPR1							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X04)))
#define NVIC_ICPR2							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X08)))
#define NVIC_ICPR3							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X0C)))
#define NVIC_ICPR4							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X10)))
#define NVIC_ICPR5							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X14)))
#define NVIC_ICPR6							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X18)))
#define NVIC_ICPR7							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X1C)))

	/* @groupMacro	: Interrupt Active Bit Registers */
#define NVIC_IABR_BASE_ADDRESS					0xE000E300

#define NVIC_IABR0							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X00)))
#define NVIC_IABR1							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X04)))
#define NVIC_IABR2							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X08)))
#define NVIC_IABR3							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X0C)))
#define NVIC_IABR4							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X10)))
#define NVIC_IABR5							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X14)))
#define NVIC_IABR6							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X18)))
#define NVIC_IABR7							(*((volatile uint32_t*)(NVIC_ICPR_BASE_ADDRESS + 0X1C)))

/* -------------------- Macro END -------------------- */

/* -------------------- Macro Functions Start -------------------- */
typedef struct {
	uint_8 NVIC_IPR[240U];
}NVIC_IPR_t;
/* -------------------- Macro Functions END -------------------- */

/* -------------------- Data Types Start -------------------- */
/* -------------------- Data Types END -------------------- */

/* -------------------- Software interface Start -------------------- */
/* -------------------- Software interface END -------------------- */


#endif /* 03_MCAL_CORE_CORTEXM3_NVIC_PRIV_H_ */


/*
--------------------------------------------------------------
--------------------------------------------------------------
*   $   Revision   $

    Data                By                  Ticket No.
    --------------      --------------      --------------
    Sep.29.2024         Ziad Mohammed       Ticket 1.
    --------------      --------------      --------------

--------------------------------------------------------------
--------------------------------------------------------------
*/
